# Aksara Writer LLM Documentation

This directory contains documentation files optimized for Large Language Models (LLMs) to help them understand and work with Aksara Writer.

## Available Documentation Files

### Root Documentation
- `/llms-full.txt` - Complete documentation (8000+ tokens) - This current file
- `/llms-medium.txt` - Compressed documentation (4000+ tokens) - Coming soon
- `/llms-small.txt` - Highly compressed documentation (2000+ tokens) - Coming soon

### Package-Specific Documentation
- `/aksara-writer-core/llms.txt` - Core conversion engine documentation - Coming soon
- `/aksara-writer-cli/llms.txt` - Command-line interface documentation - Coming soon
- `/aksara-writer-vscode/llms.txt` - VS Code extension documentation - Coming soon

---

# Aksara Writer - Complete Documentation for LLMs

Aksara Writer is a modern markdown-to-document converter designed specifically for Indonesian businesses, providing professional document generation with built-in Indonesian language support and business templates.

## Core Concepts

Aksara Writer transforms markdown documents into professional PDFs, HTML presentations, and PPTX files using custom directives and Indonesian business formatting.

### Basic Usage

```bash
# Install CLI
npm install -g aksara-writer

# Convert markdown to PDF
aksara convert document.md --format pdf

# Convert to HTML presentation
aksara convert presentation.md --format html

# Convert to PowerPoint
aksara convert slides.md --format pptx
```

### Document Directives

Every Aksara document starts with configuration directives in HTML comments:

```markdown
<!--
aksara:true
type: document | presentation
size: A4 | 16:9 | 4:3 | 210mmx297mm
style: ./custom.css
meta:
    title: Document Title
    subtitle: Document Subtitle
    author: Author Name
header: | Company Name | Document Type | ${new Date().toLocaleDateString('id-ID')} |
footer: Halaman [page] dari [total] - Dibuat dengan Aksara Writer
background: ./background.jpg
-->

# Document Content Here
```

## Document Types

### Document Mode (`type: document`)
- A4 portrait layout optimized for business documents
- Multi-page support with headers/footers
- Indonesian business templates (invoices, proposals, reports)

### Presentation Mode (`type: presentation`)
- Slide-based layout with section breaks (`---`)
- Responsive typography using `clamp()` functions
- Fullscreen presentation support

## Advanced Features

### Custom Image Positioning
```markdown
![bg t:0 l:0 w:100% h:100%](background.png)  # Full background
![fg r:20px t:50px w:100px](logo.png)       # Positioned foreground
![lg h:60px](header-logo.png)               # Logo with height constraint
![wm opacity:0.3](watermark.png)            # Watermark overlay
```

### Section Classes
```markdown
---
<!-- class:cover -->
# Cover Slide Content

---
<!-- class:quote -->
## Quote or Highlight Section

---
<!-- class:divider -->
### Section Divider
```

### Indonesian Business Templates

#### Invoice Template
```markdown
<!--
aksara:true
template: invoice
style: ./templates/invoice.css
meta:
    title: Faktur Penjualan
header: | PT. Perusahaan | NPWP: 01.234.567.8-901.000 | ${new Date().toLocaleDateString('id-ID')} |
-->

# FAKTUR PENJUALAN

| No | Deskripsi | Qty | Harga | Total |
|----|-----------|-----|-------|-------|
| 1  | Jasa Konsultasi | 10 | Rp 500.000 | **Rp 5.000.000** |
```

#### Business Proposal Template
```markdown
<!--
aksara:true
template: proposal
size: A4
meta:
    title: Proposal Bisnis
    subtitle: Kerjasama Strategis
-->

# PROPOSAL BISNIS
## Executive Summary

**Latar Belakang:** [Penjelasan bisnis]
**Tujuan:** [Objektif proposal]
**Investasi:** Rp [jumlah]
```

## Responsive Typography

Aksara Writer uses responsive typography that scales with viewport:

```css
/* Base responsive scaling */
font-size: clamp(1rem, 3vh, 1.5rem);

/* Heading scales */
h1 { font-size: clamp(2.5rem, 8vh, 4rem); }
h2 { font-size: clamp(2rem, 6vh, 3rem); }
h3 { font-size: clamp(1.5rem, 4.5vh, 2.25rem); }
```

## Custom Styling

### CSS Class Mapping
- `.document-section` → Target individual pages/slides
- `.section-content` → Main content area
- `.document-header` → Header area
- `.document-footer` → Footer area
- `.page-number` → Page numbering

### Example Custom Styles
```css
.document-section:first-child {
    text-align: right;
    color: #CCC;
}

.document-section:first-child h1,
.document-section:first-child h3 {
    color: #FFF;
}

.section-content {
    background-color: rgba(255,255,255,0.8);
    border-radius: 1rem;
    padding: 2rem;
}
```

## Indonesian Language Features

### Date Formatting
```markdown
Tanggal: ${new Date().toLocaleDateString('id-ID')}
Tahun: ${new Date().getFullYear()}
```

### Currency Formatting
```markdown
Total: Rp 21.140.000
Terbilang: *Dua Puluh Satu Juta Seratus Empat Puluh Ribu Rupiah*
```

### Business Document Standards
- NPWP formatting: `01.234.567.8-901.000`
- Address formatting: Indonesian postal conventions
- Tax compliance templates
- Government document formats

## API Usage (Node.js)

```typescript
import { AksaraConverter } from 'aksara-writer-core';

const converter = new AksaraConverter({
  format: 'pdf',
  locale: 'id',
  theme: 'corporate'
});

const result = await converter.convert(markdownContent);
if (result.success) {
  fs.writeFileSync('output.pdf', result.data);
}
```

## Available Themes
- `default`: Clean Indonesian business style
- `minimal`: Minimalist design
- `corporate`: Formal corporate documents
- `government`: Indonesian government standards

## Available Templates
- `invoice`: Tax-compliant Indonesian invoices
- `proposal`: Business proposal format
- `report`: Corporate reporting template
- `contract`: Legal contract template
- `letter`: Official letter format

## Creating White Papers and Professional Documents

### Using Shared Assets

When creating multiple white papers or professional documents, use a shared assets directory:

```
project/
├── white-papers/
│   ├── assets/
│   │   ├── style.css           # Shared professional theme
│   │   ├── aksara-logo.svg     # Organization logo
│   │   ├── aksara-logo.png     # Organization logo (raster)
│   │   └── images/             # Shared images
│   ├── whitepaper-1.md
│   ├── whitepaper-2.md
│   └── README.md
```

### Professional White Paper Template

```markdown
---
title: "Your White Paper Title"
subtitle: "A Professional Document"
author: "Your Name"
organization: "Your Organization"
date: "November 2025"
version: "1.0"
status: "Draft"
keywords: ["keyword1", "keyword2", "keyword3"]
abstract: "Brief summary of the white paper content"
---

> **Meta Note**: This document was created using Aksara Writer.

# Executive Summary

Your executive summary content here...

# 1. Introduction

## 1.1 Background

Content with Mermaid diagrams:

\`\`\`mermaid
graph LR
    A[Start] --> B[Process]
    B --> C[End]
\`\`\`

![Your Logo](./assets/aksara-logo.svg)

# 2. Main Content

Regular content with references to shared CSS...
```

### Converting with Shared Theme

```bash
# Convert white paper using shared CSS theme
aksara-writer convert whitepaper.md \
  -o whitepaper.pdf \
  --css ./assets/style.css

# Or reference in YAML frontmatter
---
title: "White Paper"
css: "./assets/style.css"
---
```

### Professional Theme Features

The shared `assets/style.css` includes:

1. **Cover Page Styling**
   - Gradient backgrounds
   - Logo placement
   - Professional typography

2. **Mermaid Diagram Support**
   - Auto-centering
   - Page-break protection
   - Proper spacing

3. **Professional Elements**
   - Header/footer with page numbers
   - Color-coded callouts (success, warning, danger, info)
   - Table styling with alternating rows
   - Code block syntax highlighting

4. **Print Optimization**
   - A4 page sizing
   - Proper page breaks
   - Print-friendly colors

### Mermaid Diagrams in Documents

Aksara Writer supports Mermaid diagrams for flowcharts, sequence diagrams, and more:

```markdown
\`\`\`mermaid
flowchart TD
    A[User Input] --> B{Decision}
    B -->|Yes| C[Process A]
    B -->|No| D[Process B]
    C --> E[Output]
    D --> E

    style C fill:#50c878
    style D fill:#ff6b6b
\`\`\`
```

**Supported Mermaid diagram types:**
- `flowchart` / `graph` - Flowcharts and diagrams
- `sequenceDiagram` - Sequence diagrams
- `gantt` - Gantt charts for roadmaps (auto-sized for better display)
- `pie` - Pie charts for data visualization
- `gitGraph` - Git branching diagrams

**Gantt Chart Sizing:**
Gantt charts are automatically detected and styled to stretch to full width while maintaining reasonable height. No special configuration needed:

```markdown
\`\`\`mermaid
gantt
    title Project Roadmap
    dateFormat YYYY-MM-DD
    section Phase 1
    Research           :2025-01-01, 30d
    Design             :2025-01-15, 20d
    section Phase 2
    Development        :2025-02-01, 60d
    Testing            :2025-03-01, 30d
\`\`\`
```

The Gantt chart will automatically:
- Stretch to 100% width of the page
- Maintain a minimum height of 400px
- Cap at maximum height of 600px
- Enable horizontal scrolling if content is too wide

### Color Coding in Diagrams

Use Mermaid's `style` directive for visual hierarchy:

```markdown
\`\`\`mermaid
graph LR
    A[Traditional] --> B[Slow Process]
    C[New Approach] --> D[Fast Process]

    style B fill:#ff6b6b
    style D fill:#50c878
\`\`\`
```

**Recommended color palette:**
- Success/Positive: `#50c878` (green)
- Warning/Caution: `#ffd93d` (yellow)
- Danger/Negative: `#ff6b6b` (red)
- Primary: `#667eea` (blue)
- Secondary: `#764ba2` (purple)

## Metadata Variables

Define custom metadata fields and use them as variables throughout your document.

### Defining Metadata

```markdown
<!--
aksara:true
type: document
meta:
    company: "PT. Aksara Digital"
    from_name: "John Doe"
    position: "Director"
    ref_number: "REF/2025/001"
    custom_field: "Any value you want"
-->
```

### Using Metadata Variables

Access metadata anywhere in your content using `${meta.fieldname}`:

```markdown
**Company**: ${meta.company}
**From**: ${meta.from_name}, ${meta.position}
**Ref No**: ${meta.ref_number}
```

### Metadata in Headers/Footers

```markdown
header: | ${meta.company} | ${new Date().toLocaleDateString('id-ID')} |
footer: | ${meta.ref_number} | Page [page] of [total] |
```

### Error Handling

If a metadata field doesn't exist, it will display: `[meta.fieldname not found]`

```markdown
${meta.existing_field}    → "Value"
${meta.nonexistent_field} → "[meta.nonexistent_field not found]"
```

### Use Cases

**Corporate Letters:**
```markdown
| Kepada      | ${meta.to_name}      |
| Dari        | ${meta.from_name}    |
| Perihal     | ${meta.subject}      |
| No. Ref     | ${meta.ref_number}   |
```

**Forms:**
```markdown
Nama Perusahaan: ${meta.company}
Alamat: ${meta.address}
Telepon: ${meta.phone}
Email: ${meta.email}
```

**Repeated Values:**
Define once in meta, use multiple times without repetition.

## Common Patterns

### Multi-page Document
```markdown
<!--
aksara:true
type: document
-->

# Page 1 Content

---

# Page 2 Content

---

# Page 3 Content
```

### Presentation Slides
```markdown
<!--
aksara:true
type: presentation
size: 16:9
-->

# Title Slide

---

## Content Slide
- Point 1
- Point 2
- Point 3

---

## Conclusion
```

### Mixed Content with Backgrounds
```markdown
![bg t:0 l:0 w:100% h:100%](background.jpg)

# Content Over Background

Regular markdown content appears over the background image.

![fg r:20px t:20px w:80px](logo.png)
```

## Error Handling

Common issues and solutions:

1. **Missing directive block**: Documents must start with `<!-- aksara:true -->`
2. **Invalid image paths**: Use relative paths from document location
3. **CSS not loading**: Ensure style path is relative to document
4. **Font overflow**: Use responsive `clamp()` sizing for presentations
5. **Background not showing**: Check image path and positioning syntax

This documentation covers the essential patterns for using Aksara Writer effectively for Indonesian business document generation.